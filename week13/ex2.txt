Deadlock detection and recovery.
This method allows a deadlock to occur, then detects and resolves it.
Deadlock detection is a high cost operation, which is why many systems do not use this method.
Since the system knows which free resources are available and which are taken, it is always possible to determine whether a deadlock has occurred or not.
Deadlock recovery is performed by interrupting one or more processes, it causes the loss of intermediate computations.

Deadlock avoidance.
This method is only possible when the system has the ability to decide whether it is safe to provide a resource, and only make allocations when it is safe to do so.
This requires the system to know the resources that the threads will request.

Deadlock prevention.
This method is based on the fact that deadlocks cannot occur in the system at all.
This is achieved by preventing at least one of the four deadlock conditions (Mutual-Exclusion, Hold-and-Wait, No-Preemption, Circular wait). 
